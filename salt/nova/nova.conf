# OpenStack Nova configuration
[DEFAULT]
dhcpbridge_flagfile=/etc/nova/nova.conf
dhcpbridge=/usr/bin/nova-dhcpbridge
logdir=/var/log/nova
state_path=/var/lib/nova
lock_path=/var/lock/nova
force_dhcp_release=True
libvirt_use_virtio_for_bridges=True
verbose=True
ec2_private_dns_show_ip=True
api_paste_config=/etc/nova/api-paste.ini
enabled_apis=ec2,osapi_compute,metadata
auth_strategy = keystone

# Message Queue
rpc_backend = {{ rpc_backend }}
{% if rpc_backend == 'rabbit' -%}
rabbit_host = {{ rabbitmq_host }}
rabbit_userid = {{ rabbitmq_user }}
rabbit_password = {{ rabbitmq_pass }}
rabbit_virtual_host = {{ rabbitmq_vhost }}
{% endif -%}

{% if grains['host'] == nova_host and novnc_ssl == True -%}
# NoVNC (Controller)
ssl_only = {{ novnc_ssl }}
cert={{ novnc_ssl_crt }}
key={{ novnc_ssl_key }}
{% endif -%}

{% if grains['host'] in nova_compute -%}
# NoVNC
vnc_enabled = True
vncserver_listen = 0.0.0.0
vncserver_proxyclient_address = {{ grains['fqdn_ip4'] | first() }}
novncproxy_base_url = {{ novnc_url }}

# EC2
ec2_host = {{ ec2_host }}
ec2_url = {{ ec2_endpoint }}

# Network
network_api_class = nova.network.neutronv2.api.API
security_group_api = neutron
linuxnet_interface_driver = nova.network.linux_net.LinuxOVSInterfaceDriver
firewall_driver = nova.virt.firewall.NoopFirewallDriver
service_neutron_metadata_proxy = True
neutron_metadata_proxy_shared_secret = {{ nova_metadata_secret }}
{% endif %}

[database]
connection = {{ db_backend }}://{{ db_user }}:{{ db_pass }}@{{ db_host }}/{{ db_name }}

[keystone_authtoken]
identity_uri = {{ keystone_admin_uri }}
auth_uri = {{ keystone_internal_url }}
admin_tenant_name = {{ nova_service_tenant }}
admin_user = {{ nova_service_user }}
admin_password = {{ nova_service_password }}

[glance]
host = {{ glance_host }}

[neutron]
url = {{ neutron_endpoint }}
auth_strategy = keystone
admin_auth_url = {{ keystone_internal_url }}
admin_tenant_name = {{ neutron_service_tenant }}
admin_username = {{ neutron_service_user }}
admin_password = {{ neutron_service_password }}
